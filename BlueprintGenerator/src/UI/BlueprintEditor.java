package UI;

import java.io.File;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

public class BlueprintEditor extends javax.swing.JFrame {
    public Data.Blueprint blueprint = new Data.Blueprint();
    
    /**
     * Creates new form BlueprintEditor
     */
    public BlueprintEditor() {
        initComponents();
        loadFromBlueprint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jfcBlueprint = new javax.swing.JFileChooser();
        btnExport = new java.awt.Button();
        btnImport = new java.awt.Button();
        btnReset = new java.awt.Button();
        txtSubtype = new java.awt.TextField();
        label1 = new java.awt.Label();
        label2 = new java.awt.Label();
        txtDisplayName = new java.awt.TextField();
        txtIcon = new java.awt.TextField();
        label3 = new java.awt.Label();
        label4 = new java.awt.Label();
        txtProductionTime = new java.awt.TextField();
        label7 = new java.awt.Label();
        listPrerequisites = new java.awt.List();
        btnAddPrerequisite = new java.awt.Button();
        btnRemovePrerequisite = new java.awt.Button();
        btnEditPrerequisite = new java.awt.Button();
        btnMovePrerequisite = new java.awt.Button();
        listResults = new java.awt.List();
        label8 = new java.awt.Label();
        btnAddResult = new java.awt.Button();
        btnRemoveResult = new java.awt.Button();
        btnEditResult = new java.awt.Button();
        btnMoveResult = new java.awt.Button();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Space Engineers Blueprint Editor");
        setIconImage(new ImageIcon("icon/space_engineers.jpg").getImage());
        setMaximumSize(new java.awt.Dimension(402, 330));
        setMinimumSize(new java.awt.Dimension(402, 330));

        btnExport.setLabel("Export...");
        btnExport.setName("btn_save"); // NOI18N
        btnExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportActionPerformed(evt);
            }
        });

        btnImport.setLabel("Import...");
        btnImport.setName("btn_load"); // NOI18N
        btnImport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importActionPerformed(evt);
            }
        });

        btnReset.setLabel("Reset");
        btnReset.setName("btn_clear"); // NOI18N
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });

        txtSubtype.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtSubtype.setName("txt_subtype"); // NOI18N
        txtSubtype.addTextListener(new java.awt.event.TextListener() {
            public void textValueChanged(java.awt.event.TextEvent evt) {
                txtSubtypeTextValueChanged(evt);
            }
        });

        label1.setName("lbl_subtype"); // NOI18N
        label1.setText("Blueprint Name:");

        label2.setName("lbl_displayName"); // NOI18N
        label2.setText("Display Name:");

        txtDisplayName.setName("txt_displayName"); // NOI18N
        txtDisplayName.addTextListener(new java.awt.event.TextListener() {
            public void textValueChanged(java.awt.event.TextEvent evt) {
                txtDisplayNameTextValueChanged(evt);
            }
        });

        txtIcon.setName("txt_icon"); // NOI18N
        txtIcon.addTextListener(new java.awt.event.TextListener() {
            public void textValueChanged(java.awt.event.TextEvent evt) {
                txtIconTextValueChanged(evt);
            }
        });

        label3.setName("lbl_icon"); // NOI18N
        label3.setText("Icon Texture:");

        label4.setName("lbl_productionTime"); // NOI18N
        label4.setText("Production Time:");

        txtProductionTime.setName("txt_productionTime"); // NOI18N
        txtProductionTime.addTextListener(new java.awt.event.TextListener() {
            public void textValueChanged(java.awt.event.TextEvent evt) {
                txtProductionTimeTextValueChanged(evt);
            }
        });

        label7.setName("lbl_prerequisites"); // NOI18N
        label7.setText("Prerequisites:");

        listPrerequisites.setName("lst_prerequisites"); // NOI18N

        btnAddPrerequisite.setLabel("Add...");
        btnAddPrerequisite.setName("btn_addPrerequisiteItem"); // NOI18N
        btnAddPrerequisite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPrereqActionPerformed(evt);
            }
        });

        btnRemovePrerequisite.setLabel("Delete");
        btnRemovePrerequisite.setName("btn_removePrerequisiteItem"); // NOI18N
        btnRemovePrerequisite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removePrereqActionPerformed(evt);
            }
        });

        btnEditPrerequisite.setLabel("Edit...");
        btnEditPrerequisite.setName("btn_editPrerequisiteItem"); // NOI18N
        btnEditPrerequisite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editPrereqActionPerformed(evt);
            }
        });

        btnMovePrerequisite.setLabel("Move");
        btnMovePrerequisite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                movePrereqActionPerformed(evt);
            }
        });

        listResults.setName("lst_results"); // NOI18N

        label8.setName("lbl_results"); // NOI18N
        label8.setText("Results:");

        btnAddResult.setLabel("Add...");
        btnAddResult.setName("btn_addPrerequisiteItem"); // NOI18N
        btnAddResult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addResultActionPerformed(evt);
            }
        });

        btnRemoveResult.setLabel("Delete");
        btnRemoveResult.setName("btn_removePrerequisiteItem"); // NOI18N
        btnRemoveResult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeResultActionPerformed(evt);
            }
        });

        btnEditResult.setLabel("Edit...");
        btnEditResult.setName("btn_editPrerequisiteItem"); // NOI18N
        btnEditResult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editResultActionPerformed(evt);
            }
        });

        btnMoveResult.setLabel("Move");
        btnMoveResult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moveResultActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnImport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnExport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14)
                        .addComponent(txtSubtype, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(label4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtProductionTime, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtIcon, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE)
                            .addComponent(txtDisplayName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(listPrerequisites, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(btnAddPrerequisite, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnEditPrerequisite, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnMovePrerequisite, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(btnRemovePrerequisite, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(label7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(listResults, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(btnAddResult, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnEditResult, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(btnMoveResult, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnRemoveResult, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnExport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnImport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSubtype, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtDisplayName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtIcon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtProductionTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(label7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(listResults, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(btnAddPrerequisite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEditPrerequisite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnMovePrerequisite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnRemovePrerequisite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(btnAddResult, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEditResult, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnMoveResult, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnRemoveResult, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(listPrerequisites, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnReset.getAccessibleContext().setAccessibleDescription("");
        label1.getAccessibleContext().setAccessibleName("");
        label3.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportActionPerformed
        File suggestedFile = new File("Blueprints_" + blueprint.subtype + ".xml");
        jfcBlueprint.setSelectedFile(suggestedFile);
        if (jfcBlueprint.showSaveDialog(this) == javax.swing.JFileChooser.APPROVE_OPTION) {
            try {
                IO.BlueprintWriter.save(jfcBlueprint.getSelectedFile(), blueprint);
            } catch (Exception e) {
                System.err.println(e.getMessage());
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, e.getMessage(), "Unable To Export Blueprint", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_exportActionPerformed

    private void addPrereqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPrereqActionPerformed
        ItemDialog dialog = new ItemDialog(this, true);
        dialog.setLocationRelativeTo(this);
        Data.Item item = dialog.createItem();
        if (item != null) {
            blueprint.prerequisites.add(item);
            refreshPrerequisites();
        }
    }//GEN-LAST:event_addPrereqActionPerformed

    private void addResultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addResultActionPerformed
        ItemDialog dialog = new ItemDialog(this, true);
        dialog.setLocationRelativeTo(this);
        Data.Item item = dialog.createItem();
        if (item != null) {
            blueprint.results.add(item);
            refreshResults();
        }
    }//GEN-LAST:event_addResultActionPerformed

    private void importActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importActionPerformed
        if (jfcBlueprint.showOpenDialog(this) == javax.swing.JFileChooser.APPROVE_OPTION) {
            try {
                blueprint = IO.BlueprintReader.load(jfcBlueprint.getSelectedFile());
                loadFromBlueprint();
            } catch (Exception e) {
                System.err.println(e.getMessage());
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, e.getMessage(), "Unable To Import Blueprint", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_importActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        blueprint.subtype = "OreToIngot";
        blueprint.displayName = "DisplayName_Item_Ingot";
        blueprint.icon = "Textures\\GUI\\Icons\\Ingot\\ingot.dds";
        blueprint.productionTime = 0.0f;
        blueprint.prerequisites.clear();
        blueprint.results.clear();
        loadFromBlueprint();
    }//GEN-LAST:event_resetActionPerformed

    private void removePrereqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removePrereqActionPerformed
        int idx = listPrerequisites.getSelectedIndex();
        if (idx > -1) {
            listPrerequisites.remove(idx);
            blueprint.prerequisites.remove(idx);
        }
    }//GEN-LAST:event_removePrereqActionPerformed

    private void editPrereqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editPrereqActionPerformed
        int idx = listPrerequisites.getSelectedIndex();
        if (idx > -1) {
            Data.Item item = blueprint.prerequisites.get(idx);
            ItemDialog dialog = new ItemDialog(this, true);
            dialog.setLocationRelativeTo(this);
            item = dialog.editItem(item);
            if (item != null) {
                blueprint.prerequisites.set(idx,item);
                refreshPrerequisites();
            }
        }
    }//GEN-LAST:event_editPrereqActionPerformed

    private void movePrereqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_movePrereqActionPerformed
        int idx = listPrerequisites.getSelectedIndex();
        if (idx > -1) {
            Data.Item item = blueprint.prerequisites.get(idx);
            listPrerequisites.remove(idx);
            listResults.add(item.toString());
            blueprint.prerequisites.remove(item);
            blueprint.results.add(item);
        }
    }//GEN-LAST:event_movePrereqActionPerformed

    private void removeResultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeResultActionPerformed
        int idx = listResults.getSelectedIndex();
        if (idx > -1) {
            listResults.remove(idx);
            blueprint.results.remove(idx);
        }
    }//GEN-LAST:event_removeResultActionPerformed

    private void editResultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editResultActionPerformed
        int idx = listResults.getSelectedIndex();
        if (idx > -1) {
            Data.Item item = blueprint.results.get(idx);
            ItemDialog dialog = new ItemDialog(this, true);
            dialog.setLocationRelativeTo(this);
            item = dialog.editItem(item);
            if (item != null) {
                blueprint.results.set(idx,item);
                refreshResults();
            }
        }
    }//GEN-LAST:event_editResultActionPerformed

    private void moveResultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moveResultActionPerformed
        int idx = listResults.getSelectedIndex();
        if (idx > -1) {
            Data.Item item = blueprint.results.get(idx);
            listResults.remove(idx);
            listPrerequisites.add(item.toString());
            blueprint.results.remove(item);
            blueprint.prerequisites.add(item);
        }
    }//GEN-LAST:event_moveResultActionPerformed

    private void txtSubtypeTextValueChanged(java.awt.event.TextEvent evt) {//GEN-FIRST:event_txtSubtypeTextValueChanged
        blueprint.subtype = txtSubtype.getText();
    }//GEN-LAST:event_txtSubtypeTextValueChanged

    private void txtDisplayNameTextValueChanged(java.awt.event.TextEvent evt) {//GEN-FIRST:event_txtDisplayNameTextValueChanged
        blueprint.displayName = txtDisplayName.getText();
    }//GEN-LAST:event_txtDisplayNameTextValueChanged

    private void txtIconTextValueChanged(java.awt.event.TextEvent evt) {//GEN-FIRST:event_txtIconTextValueChanged
        blueprint.icon = txtIcon.getText();
    }//GEN-LAST:event_txtIconTextValueChanged

    private void txtProductionTimeTextValueChanged(java.awt.event.TextEvent evt) {//GEN-FIRST:event_txtProductionTimeTextValueChanged
        try {
            blueprint.productionTime = Float.parseFloat(txtProductionTime.getText());
        } catch (Exception e) {
            blueprint.productionTime = 0.0f;
        }
    }//GEN-LAST:event_txtProductionTimeTextValueChanged

    
    private void loadFromBlueprint() {
        txtSubtype.setText(blueprint.subtype);
        txtDisplayName.setText(blueprint.displayName);
        txtIcon.setText(blueprint.icon);
        txtProductionTime.setText(Float.toString(blueprint.productionTime));
        refreshPrerequisites();
        refreshResults();
    }
    
    private void refreshPrerequisites() {
        listPrerequisites.removeAll();
        for (Data.Item item : blueprint.prerequisites) {
            listPrerequisites.add(item.toString());
        }
    }
    
    private void refreshResults() {
        listResults.removeAll();
        for (Data.Item item : blueprint.results) {
            listResults.add(item.toString());
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BlueprintEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BlueprintEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BlueprintEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BlueprintEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BlueprintEditor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button btnAddPrerequisite;
    private java.awt.Button btnAddResult;
    private java.awt.Button btnEditPrerequisite;
    private java.awt.Button btnEditResult;
    private java.awt.Button btnExport;
    private java.awt.Button btnImport;
    private java.awt.Button btnMovePrerequisite;
    private java.awt.Button btnMoveResult;
    private java.awt.Button btnRemovePrerequisite;
    private java.awt.Button btnRemoveResult;
    private java.awt.Button btnReset;
    private javax.swing.JFileChooser jfcBlueprint;
    private java.awt.Label label1;
    private java.awt.Label label2;
    private java.awt.Label label3;
    private java.awt.Label label4;
    private java.awt.Label label7;
    private java.awt.Label label8;
    private java.awt.List listPrerequisites;
    private java.awt.List listResults;
    private java.awt.TextField txtDisplayName;
    private java.awt.TextField txtIcon;
    private java.awt.TextField txtProductionTime;
    private java.awt.TextField txtSubtype;
    // End of variables declaration//GEN-END:variables
}
